plugins {
    id("fabric-loom") version("0.5-SNAPSHOT")
    id("maven-publish")
    id("com.dorongold.task-tree") version "1.5"
    id "com.jfrog.bintray" version "1.8.5"
}

test {
    workingDir = 'testRun'
}

repositories {
    maven {
        url = 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/'
    }
    maven { url = "https://dl.bintray.com/febb/maven" }
    maven {
        url 'https://jitpack.io'
        content {
            // this repository *only* contains artifacts with group "my.company"
            includeGroup "net.devtech"
            includeGroup "com.github.Chocohead"
        }
    }
    flatDir {
        dirs 'mods/'
    }
}


java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}
apply plugin: FebbAssembly

def totalVersion = "$minecraft_version+$mappings_build-$api_build"

group 'io.github.febb'
version totalVersion
archivesBaseName = "api"

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }

    test {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

dependencies {
    // fabric
    minecraft("com.mojang:minecraft:$minecraft_version")
    mappings("net.fabricmc:yarn:$minecraft_version+build.$mappings_build:v2")
    modImplementation("net.fabricmc:fabric-loader:$loader_version")
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    // api
    compileOnly(files("$project.buildDir/febbAssembly/$project.minecraft_version/abstracted/api.jar"))

    // nanoevents (includes fasm)
    modImplementation "net.devtech:NanoEvents:$nano_events_ver"

    testmodCompileOnly 'net.devtech:nanoevents-ap:1.0.4'
    compileOnly 'net.devtech:nanoevents-ap:1.0.4'

    annotationProcessor 'net.devtech:nanoevents-ap:1.0.4'
    testmodAnnotationProcessor 'net.devtech:nanoevents-ap:1.0.4'

    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    compileOnly 'org.jetbrains:annotations:19.0.0'

    fileTree(dir: 'mods', include: '*.jar').each {
        String baseName = it.name.replace(".jar", "")
        String version = "0.1.0"
        int split = baseName.lastIndexOf('-')

        if (split != -1) {
            version = baseName.substring(split + 1)
            baseName = baseName.substring(0, split)
        }

        String name = "testmod:${baseName}:${version}"

        System.out.println("Found test mod: " + it.name.replace(".jar", "") + " -> " + name)
        modImplementation name
        testImplementation name
        testmodImplementation name
    }

    testImplementation group: 'junit', name: 'junit', version: '4.12'

    afterEvaluate {
        testmodCompile project
        testCompile project
        //testmodCompile project("${it.name}:").sourceSets.testmod.output
    }
}

processTestmodResources {
    inputs.property "version", project.version
    from(sourceSets.testmod.output.classesDirs.singleFile) {
        include "nanoevents/**"
    }

    from(sourceSets.testmod.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.testmod.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}


processResources {
    inputs.property "version", project.version
    from(sourceSets.main.output.classesDirs.singleFile) {
        include "nanoevents/**"
    }

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}


// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId 'io.github.febb'
            artifactId "api"
            version totalVersion

            def artifacts = FebbAssembly.Companion.artifacts
            artifact(remapJar) {
                builtBy remapJar
                classifier "impl-fabric"
            }

            artifact(artifacts.apiBinariesJar) {
                classifier "api"
            }

            artifact(artifacts.apiSourcesJar) {
                classifier "api-sources"
            }

            artifact(artifacts.abstractionManifestJar) {
                artifact(artifacts.apiBinariesJar) {
                    classifier "api"
                }

                artifact(artifacts.apiSourcesJar) {
                    classifier "api-sources"
                }

                artifact(artifacts.abstractionManifestJar) {
                    classifier "dev-manifest"
                }
            }
        }
    }
}


bintray {
    user = project.hasProperty('bintray_user') ? project.property('bintray_user') : ""
    key = project.hasProperty('bintray_api_key') ? project.property('bintray_api_key') : ""
    publications = ["mavenJava"]
    publish = true //[Default: false] Whether version should be auto published after an upload
    pkg {
        repo = "maven"
        name = "Febb-Api"
        userOrg = "febb"
        licenses = ["LGPLv3"]
        version {
            name = totalVersion
            released = new Date()
        }
    }
}